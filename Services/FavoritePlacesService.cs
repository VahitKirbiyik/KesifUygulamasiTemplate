using System.Collections.Generic;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing Microsoft.Maui.Devices.Sensors;\nusing KesifUygulamasiTemplate.Services.Interfaces;\nusing KesifUygulamasiTemplate.Models;\n\nnamespace KesifUygulamasiTemplate.Services\n{\n    public class FavoritePlacesService : IFavoritePlacesService\n    {\n        private readonly Dictionary<string, (string name, Location location)> _store = new();\n\n        public Task AddFavoriteAsync(LocationModel place)\n        {\n            var location = new Location(place.Latitude, place.Longitude);\n            _store[place.Id.ToString()] = (place.Title, location);\n            return Task.CompletedTask;\n        }\n\n        public Task RemoveFavoriteAsync(string id)\n        {\n            _store.Remove(id);\n            return Task.CompletedTask;\n        }\n\n        public Task<IEnumerable<LocationModel>> GetFavoritesAsync()\n        {\n            var favorites = _store.Select(kv =>\n            {\n                var (name, location) = kv.Value;\n                return new LocationModel\n                {\n                    Id = int.Parse(kv.Key),\n                    Title = name,\n                    Latitude = location.Latitude,\n                    Longitude = location.Longitude\n                };\n            });\n            return Task.FromResult(favorites);\n        }\n\n        public Task<IEnumerable<LocationModel>> GetAllFavoritePlacesAsync()\n        {\n            return GetFavoritesAsync();\n        }\n    }\n}\n