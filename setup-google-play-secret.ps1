# Google Play Service Account Secret Kurulum Script'i\n# .NET MAUI KesifUygulamasiTemplate projesi i�in\n\nWrite-Host "?? Google Play Service Account Secret Kurulum Ba�lat�l�yor..." -ForegroundColor Green\nWrite-Host ""\n\n# 1) Repo k�k�ne ge�\n$repoRoot = "C:\Users\VAH�T\KesifUygulamasiTemplate"\nWrite-Host "?? Repo k�k�: $repoRoot" -ForegroundColor Yellow\nSet-Location $repoRoot\n\n# 2) GitHub CLI kontrol & kurulum\nWrite-Host "?? GitHub CLI kontrol ediliyor..." -ForegroundColor Yellow\nif (-not (Get-Command gh -ErrorAction SilentlyContinue)) {\n    Write-Host "? GitHub CLI bulunamad�!" -ForegroundColor Red\n    Write-Host "?? GitHub CLI kurulumu ba�lat�l�yor..." -ForegroundColor Yellow\n    \n    try {\n        # Winget ile kurulum denemeleri\n        if (Get-Command winget -ErrorAction SilentlyContinue) {\n            Write-Host "   Winget ile kuruluyor..." -ForegroundColor Cyan\n            winget install --id GitHub.cli --silent\n        }\n        elseif (Get-Command choco -ErrorAction SilentlyContinue) {\n            Write-Host "   Chocolatey ile kuruluyor..." -ForegroundColor Cyan\n            choco install gh --yes\n        }\n        else {\n            Write-Host "? Otomatik kurulum yap�lamad�!" -ForegroundColor Red\n            Write-Host "?? Manuel kurulum i�in: https://cli.github.com/" -ForegroundColor Cyan\n            Write-Host "1. GitHub CLI'yi indirip kurun" -ForegroundColor White\n            Write-Host "2. Script'i tekrar �al��t�r�n" -ForegroundColor White\n            Read-Host "Kurulum tamamlad�ktan sonra Enter'a bas�n"\n        }\n    }\n    catch {\n        Write-Host "? GitHub CLI kurulumu ba�ar�s�z: $($_.Exception.Message)" -ForegroundColor Red\n        Write-Host "?? Manuel kurulum gerekli: https://cli.github.com/" -ForegroundColor Cyan\n        exit 1\n    }\n}\nelse {\n    Write-Host "? GitHub CLI zaten kurulu" -ForegroundColor Green\n}\n\n# 3) GitHub Auth kontrol�\nWrite-Host "?? GitHub authentication kontrol ediliyor..." -ForegroundColor Yellow\ntry {\n    $authStatus = gh auth status 2>&1\n    if ($LASTEXITCODE -ne 0) {\n        Write-Host "? GitHub'a giri� yap�lmam��!" -ForegroundColor Red\n        Write-Host "?? GitHub'a giri� yap�l�yor..." -ForegroundColor Yellow\n        gh auth login --web\n        if ($LASTEXITCODE -ne 0) {\n            Write-Host "? GitHub authentication ba�ar�s�z!" -ForegroundColor Red\n            exit 1\n        }\n    }\n    else {\n        Write-Host "? GitHub authentication ba�ar�l�" -ForegroundColor Green\n    }\n}\ncatch {\n    Write-Host "? GitHub auth kontrol� ba�ar�s�z: $($_.Exception.Message)" -ForegroundColor Red\n    exit 1\n}\n\n# 4) Git repo do�rulama\nWrite-Host "?? Git repository kontrol ediliyor..." -ForegroundColor Yellow\ntry {\n    git rev-parse --is-inside-work-tree 2>$null\n    if ($LASTEXITCODE -ne 0) {\n        Write-Host "? Bu klas�r bir git deposu de�il!" -ForegroundColor Red\n        Write-Host "?? Git repository initialize ediliyor..." -ForegroundColor Yellow\n        git init\n        git remote add origin "https://github.com/VahitKirbiyik/KesifUygamamasiTemplate.git"\n    }\n    else {\n        Write-Host "? Git repository do�ruland�" -ForegroundColor Green\n    }\n}\ncatch {\n    Write-Host "? Git repository kontrol� ba�ar�s�z: $($_.Exception.Message)" -ForegroundColor Red\n    exit 1\n}\n\n# 5) Repo owner/name al�nmas�\nWrite-Host "?? Repository bilgileri al�n�yor..." -ForegroundColor Yellow\ntry {\n    $remote = git remote get-url origin 2>$null\n    if (-not $remote) {\n        Write-Host "? Origin remote bulunamad�!" -ForegroundColor Red\n        Write-Host "?? Remote URL ayarlan�yor..." -ForegroundColor Yellow\n        git remote add origin "https://github.com/VahitKirbiyik/KesifUygamamasiTemplate.git"\n        $remote = "https://github.com/VahitKirbiyik/KesifUygamamasiTemplate.git"\n    }\n    \n    $repo = ($remote -replace '.*[:/](.+?)(\.git)?$','$1')\n    Write-Host "? Repository: $repo" -ForegroundColor Green\n}\ncatch {\n    Write-Host "? Repository bilgileri al�namad�: $($_.Exception.Message)" -ForegroundColor Red\n    $repo = "VahitKirbiyik/KesifUygamamasiTemplate"\n    Write-Host "?? Varsay�lan repo kullan�l�yor: $repo" -ForegroundColor Yellow\n}\n\n# 6) Service account dosyas� kontrol�\nWrite-Host "?? Service account dosyas� kontrol ediliyor..." -ForegroundColor Yellow\n$serviceFile = ".\service-account.json"\nif (-not (Test-Path $serviceFile)) {\n    Write-Host "? service-account.json dosyas� bulunamad�!" -ForegroundColor Red\n    Write-Host ""\n    Write-Host "?? Google Play Service Account olu�turma ad�mlar�:" -ForegroundColor Cyan\n    Write-Host "1. Google Play Console'a gidin: https://play.google.com/console" -ForegroundColor White\n    Write-Host "2. Settings > API access > Service Accounts" -ForegroundColor White\n    Write-Host "3. 'Create new service account' veya mevcut olan� kullan�n" -ForegroundColor White\n    Write-Host "4. JSON anahtar�n� indirin" -ForegroundColor White\n    Write-Host "5. Dosyay� '$repoRoot\service-account.json' olarak kaydedin" -ForegroundColor White\n    Write-Host ""\n    Write-Host "?? Test i�in �rnek dosya olu�turuluyor..." -ForegroundColor Yellow\n    \n    # Test i�in �rnek service account dosyas�\n    $exampleServiceAccount = @{\n        "type" = "service_account"\n        "project_id" = "your-project-id"\n        "private_key_id" = "key-id"\n        "private_key" = "-----BEGIN PRIVATE KEY-----\nYOUR_PRIVATE_KEY\n-----END PRIVATE KEY-----\n"\n        "client_email" = "your-service-account@your-project.iam.gserviceaccount.com"\n        "client_id" = "client-id"\n        "auth_uri" = "https://accounts.google.com/o/oauth2/auth"\n        "token_uri" = "https://oauth2.googleapis.com/token"\n    }\n    \n    $exampleServiceAccount | ConvertTo-Json -Depth 10 | Out-File -FilePath $serviceFile -Encoding UTF8\n    Write-Host "?? �rnek service-account.json olu�turuldu" -ForegroundColor Yellow\n    Write-Host "??  Bu dosyay� ger�ek Google Play Service Account JSON ile de�i�tirin!" -ForegroundColor Red\n    \n    # Kullan�c�dan ger�ek dosya bekleme\n    do {\n        $choice = Read-Host "Ger�ek service-account.json dosyas�n� yerle�tirdiniz mi? (y/n)"\n        if ($choice -eq 'n' -or $choice -eq 'N') {\n            Write-Host "? Script durduruldu. Ger�ek service account dosyas�n� yerle�tirdikten sonra tekrar �al��t�r�n." -ForegroundColor Red\n            exit 1\n        }\n    } while ($choice -ne 'y' -and $choice -ne 'Y')\n}\nelse {\n    Write-Host "? service-account.json dosyas� bulundu" -ForegroundColor Green\n}\n\n# 7) Secret'� GitHub'a ekle\nWrite-Host "?? GOOGLE_PLAY_SERVICE_ACCOUNT secret'� GitHub'a ekleniyor..." -ForegroundColor Yellow\ntry {\n    gh secret set GOOGLE_PLAY_SERVICE_ACCOUNT --body-file $serviceFile --repo $repo\n    if ($LASTEXITCODE -ne 0) {\n        Write-Host "? Secret eklenirken hata olu�tu!" -ForegroundColor Red\n        exit 1\n    }\n    Write-Host "? Secret ba�ar�yla GitHub'a eklendi!" -ForegroundColor Green\n}\ncatch {\n    Write-Host "? Secret ekleme ba�ar�s�z: $($_.Exception.Message)" -ForegroundColor Red\n    exit 1\n}\n\n# 8) Git branch kontrol� ve g�ncelleme\nWrite-Host "?? Git branch kontrol�..." -ForegroundColor Yellow\ntry {\n    $currentBranch = git branch --show-current\n    Write-Host "?? Mevcut branch: $currentBranch" -ForegroundColor Cyan\n    \n    if ($currentBranch -ne "main" -and $currentBranch -ne "master") {\n        Write-Host "?? main/master branch'e ge�iliyor..." -ForegroundColor Yellow\n        git checkout main 2>$null\n        if ($LASTEXITCODE -ne 0) {\n            git checkout master 2>$null\n            if ($LASTEXITCODE -ne 0) {\n                Write-Host "? main/master branch'e ge�ilemedi!" -ForegroundColor Red\n            }\n        }\n    }\n    \n    Write-Host "?? En son de�i�iklikler �ekiliyor..." -ForegroundColor Yellow\n    git pull origin $(git branch --show-current)\n}\ncatch {\n    Write-Host "??  Git g�ncelleme uyar�s�: $($_.Exception.Message)" -ForegroundColor Yellow\n}\n\n# 9) Pipeline'� tetikle (bo� commit ile)\nWrite-Host "?? GitHub Actions pipeline tetikleniyor..." -ForegroundColor Yellow\ntry {\n    git commit --allow-empty -m "ci: trigger Play deploy with secret [test-secret]"\n    git push origin $(git branch --show-current)\n    \n    if ($LASTEXITCODE -ne 0) {\n        Write-Host "? Pipeline tetikleme ba�ar�s�z!" -ForegroundColor Red\n        Write-Host "?? Git kimlik do�rulamas� veya izinleri kontrol edin" -ForegroundColor Yellow\n    }\n    else {\n        Write-Host "? Pipeline ba�ar�yla tetiklendi!" -ForegroundColor Green\n    }\n}\ncatch {\n    Write-Host "? Pipeline tetikleme hatas�: $($_.Exception.Message)" -ForegroundColor Red\n}\n\n# 10) Kullan�m talimatlar�\nWrite-Host ""\nWrite-Host "?? GitHub Actions Monitoring Komutlar�:" -ForegroundColor Cyan\nWrite-Host "?????????????????????????????????????????" -ForegroundColor Gray\nWrite-Host ""\nWrite-Host "?? Workflow'lar� listele:" -ForegroundColor Yellow\nWrite-Host "   gh run list --repo $repo --limit 5" -ForegroundColor White\nWrite-Host ""\nWrite-Host "?? Son workflow detay�n� g�r�nt�le:" -ForegroundColor Yellow\nWrite-Host "   gh run view --repo $repo" -ForegroundColor White\nWrite-Host ""\nWrite-Host "?? Workflow loglar�n� g�r�nt�le:" -ForegroundColor Yellow\nWrite-Host "   gh run view <RUN_ID> --log --repo $repo" -ForegroundColor White\nWrite-Host ""\nWrite-Host "?? Artifact'lar� indir:" -ForegroundColor Yellow\nWrite-Host "   gh run download <RUN_ID> --name android-aab --repo $repo" -ForegroundColor White\nWrite-Host ""\nWrite-Host "?? Web'de g�r�nt�le:" -ForegroundColor Yellow\nWrite-Host "   https://github.com/$repo/actions" -ForegroundColor White\nWrite-Host ""\n\n# 11) Son durum �zeti\nWrite-Host "?? KURULUM �ZET�" -ForegroundColor Green\nWrite-Host "??????????????????????????????????????????" -ForegroundColor Gray\nWrite-Host "? GitHub CLI kuruldu/do�ruland�" -ForegroundColor Green\nWrite-Host "? GitHub authentication yap�ld�" -ForegroundColor Green\nWrite-Host "? Git repository do�ruland�" -ForegroundColor Green\nWrite-Host "? Service account secret eklendi" -ForegroundColor Green\nWrite-Host "? Pipeline tetiklendi" -ForegroundColor Green\nWrite-Host ""\nWrite-Host "?? Sonraki Ad�mlar:" -ForegroundColor Cyan\nWrite-Host "1. GitHub Actions sekmesini kontrol edin" -ForegroundColor White\nWrite-Host "2. Deploy i�leminin ba�ar�l� oldu�unu do�rulay�n" -ForegroundColor White\nWrite-Host "3. Google Play Console'da Internal Track'i kontrol edin" -ForegroundColor White\nWrite-Host ""\nWrite-Host "?? Kurulum tamamland�!" -ForegroundColor Green\n\n# 12) Otomatik workflow monitoring\nWrite-Host ""\n$monitor = Read-Host "Son workflow durumunu otomatik kontrol etmek ister misiniz? (y/n)"\nif ($monitor -eq 'y' -or $monitor -eq 'Y') {\n    Write-Host "?? Son workflow durumu kontrol ediliyor..." -ForegroundColor Yellow\n    try {\n        gh run list --repo $repo --limit 1\n        Write-Host ""\n        Write-Host "?? Detayl� log i�in: gh run view --log --repo $repo" -ForegroundColor Cyan\n    }\n    catch {\n        Write-Host "??  Workflow listesi al�namad�: $($_.Exception.Message)" -ForegroundColor Yellow\n    }\n}\n\nWrite-Host ""\nWrite-Host "Script tamamland�. �yi geli�tirmeler! ??" -ForegroundColor Green