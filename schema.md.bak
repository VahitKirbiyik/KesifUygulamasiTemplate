# PWA Test Sistemi Veri Yapıları

Bu dokümantasyon, Test-PWA.ps1 sistemi tarafından kullanılan JSON veri yapılarını detaylı olarak açıklar.

## 📋 Genel Bakış

Sistem üç ana JSON dosyası kullanır:
- `pwa-test-results.json`: En son test sonuçları
- `test-history.json`: Test geçmişi ve trend analizi
- `pwa-dashboard.html`: İnteraktif dashboard (HTML/JS)

## 📄 pwa-test-results.json

En son PWA testinin detaylı sonuçlarını içerir.

### Şema Yapısı

```json
{
  "metadata": {
    "timestamp": "2025-08-30T09:00:00Z",
    "script_version": "4.0",
    "test_duration_seconds": 45.2,
    "hostname": "DESKTOP-F8M2K05",
    "username": "VAHIT",
    "powershell_version": "5.1.26100.4768",
    "os_version": "Microsoft Windows NT 10.0.26100.0"
  },
  "summary": {
    "success_rate": 85,
    "passed_tests": 17,
    "failed_tests": 3,
    "skipped_tests": 0,
    "total_tests": 20,
    "test_duration": "00:00:45.2000000",
    "average_response_time": 0.18,
    "tests_per_second": 5.69
  },
  "performance_metrics": {
    "test_duration": "00:00:45.2000000",
    "average_response_time": 0.18,
    "tests_per_second": 5.69,
    "script_version": "4.0",
    "hostname": "DESKTOP-F8M2K05",
    "username": "VAHIT"
  },
  "detailed_results": {
    "manifest_test": {
      "status": "passed|failed|skipped",
      "score": 95,
      "details": "Manifest.json valid and complete",
      "category": "basic",
      "criticality": "high"
    },
    "service_worker_test": {
      "status": "passed|failed|skipped",
      "score": 0,
      "details": "Service Worker registration failed",
      "category": "basic",
      "criticality": "high"
    }
  },
  "categories": {
    "basic": {
      "passed": 4,
      "failed": 1,
      "skipped": 0,
      "total": 5,
      "success_rate": 80
    },
    "performance": {
      "passed": 3,
      "failed": 0,
      "skipped": 0,
      "total": 3,
      "success_rate": 100
    },
    "security": {
      "passed": 5,
      "failed": 1,
      "skipped": 0,
      "total": 6,
      "success_rate": 83.33
    },
    "seo": {
      "passed": 3,
      "failed": 1,
      "skipped": 0,
      "total": 4,
      "success_rate": 75
    },
    "legal": {
      "passed": 2,
      "failed": 0,
      "skipped": 0,
      "total": 2,
      "success_rate": 100
    }
  },
  "recommendations": [
    "Manifest.json dosyasını kontrol edin ve gerekli alanları ekleyin",
    "Service Worker dosyasını oluşturun ve temel event handler'ları ekleyin",
    "HTML sayfalarına PWA meta etiketlerini ekleyin",
    "HTTPS protokolünü kullanın"
  ]
}
```

### Alan Açıklamaları

#### metadata
| Alan | Tip | Açıklama |
|------|-----|----------|
| `timestamp` | string | Test çalıştırma zamanı (ISO 8601 format) |
| `script_version` | string | Kullanılan script versiyonu |
| `test_duration_seconds` | number | Test toplam süresi (saniye) |
| `hostname` | string | Test çalıştığı bilgisayar adı |
| `username` | string | Testi çalıştıran kullanıcı |
| `powershell_version` | string | PowerShell versiyonu |
| `os_version` | string | İşletim sistemi versiyonu |

#### summary
| Alan | Tip | Açıklama |
|------|-----|----------|
| `success_rate` | number | Genel başarı oranı (yüzde) |
| `passed_tests` | number | Geçen test sayısı |
| `failed_tests` | number | Başarısız test sayısı |
| `skipped_tests` | number | Atlanan test sayısı |
| `total_tests` | number | Toplam test sayısı |
| `test_duration` | string | Test süresi (.NET TimeSpan format) |
| `average_response_time` | number | Ortalama yanıt süresi (saniye) |
| `tests_per_second` | number | Saniye başına test sayısı |

#### detailed_results
Her test için detaylı sonuçları içerir.

| Alan | Tip | Açıklama |
|------|-----|----------|
| `status` | string | Test durumu: "passed", "failed", "skipped" |
| `score` | number | Test puanı (0-100) |
| `details` | string | Test sonucu açıklaması |
| `category` | string | Test kategorisi |
| `criticality` | string | Kritiklik seviyesi: "high", "medium", "low" |

#### categories
Test kategorilerine göre özet sonuçlar.

| Alan | Tip | Açıklama |
|------|-----|----------|
| `passed` | number | Kategoride geçen test sayısı |
| `failed` | number | Kategoride başarısız test sayısı |
| `skipped` | number | Kategoride atlanan test sayısı |
| `total` | number | Kategoride toplam test sayısı |
| `success_rate` | number | Kategori başarı oranı |

## 📄 test-history.json

Test geçmişini ve trend analizini içerir.

### Şema Yapısı

```json
{
  "test_runs": [
    {
      "timestamp": "2025-08-30T09:00:00Z",
      "success_rate": 85,
      "passed_tests": 17,
      "failed_tests": 3,
      "skipped_tests": 0,
      "total_tests": 20,
      "duration_seconds": 45.2,
      "script_version": "4.0",
      "hostname": "DESKTOP-F8M2K05",
      "username": "VAHIT"
    }
  ],
  "trend_analysis": {
    "direction": "improving|declining|stable",
    "change_percent": 5.2,
    "average_last_5": 82.4,
    "confidence": "high|medium|low",
    "last_5_rates": [80, 82, 85, 87, 85],
    "data_points": 5,
    "analysis_timestamp": "2025-08-30T09:00:00Z"
  },
  "statistics": {
    "total_runs": 15,
    "average_success_rate": 78.5,
    "best_run": {
      "timestamp": "2025-08-25T09:00:00Z",
      "success_rate": 95
    },
    "worst_run": {
      "timestamp": "2025-08-20T09:00:00Z",
      "success_rate": 65
    },
    "consistency_score": 85.2
  }
}
```

### Alan Açıklamaları

#### test_runs
Geçmiş test çalıştırmalarının listesi.

| Alan | Tip | Açıklama |
|------|-----|----------|
| `timestamp` | string | Test çalıştırma zamanı |
| `success_rate` | number | Başarı oranı |
| `passed_tests` | number | Geçen test sayısı |
| `failed_tests` | number | Başarısız test sayısı |
| `skipped_tests` | number | Atlanan test sayısı |
| `total_tests` | number | Toplam test sayısı |
| `duration_seconds` | number | Test süresi |
| `script_version` | string | Script versiyonu |
| `hostname` | string | Bilgisayar adı |
| `username` | string | Kullanıcı adı |

#### trend_analysis
Trend analiz sonuçları.

| Alan | Tip | Açıklama |
|------|-----|----------|
| `direction` | string | Trend yönü: "improving", "declining", "stable" |
| `change_percent` | number | Yüzde değişim oranı |
| `average_last_5` | number | Son 5 test ortalaması |
| `confidence` | string | Güvenilirlik seviyesi |
| `last_5_rates` | array | Son 5 başarı oranı |
| `data_points` | number | Analiz edilen veri noktası sayısı |
| `analysis_timestamp` | string | Analiz zamanı |

#### statistics
Genel istatistikler.

| Alan | Tip | Açıklama |
|------|-----|----------|
| `total_runs` | number | Toplam test çalıştırma sayısı |
| `average_success_rate` | number | Ortalama başarı oranı |
| `best_run` | object | En iyi test sonucu |
| `worst_run` | object | En kötü test sonucu |
| `consistency_score` | number | Tutarlılık puanı |

## 🔄 Veri Akışı

### Test Çalıştırma Süreci

1. **Test Başlatma**: Script çalıştırılır
2. **Veri Toplama**: Test sonuçları toplanır
3. **JSON Oluşturma**: pwa-test-results.json oluşturulur
4. **Geçmiş Güncelleme**: test-history.json güncellenir
5. **Trend Analizi**: Trend hesaplaması yapılır
6. **Dashboard Güncelleme**: HTML dashboard yenilenir
7. **Webhook Bildirimleri**: Slack/Discord bildirimleri gönderilir

### Otomatik Güncellemeler

- **GitHub Actions**: Haftalık otomatik testler
- **README Güncelleme**: Trend raporu otomatik güncelleme
- **Badge Güncelleme**: Otomatik badge rengi güncellemeleri
- **Webhook Bildirimleri**: Başarısızlık durumunda otomatik bildirim

## 📊 Kullanım Örnekleri

### PowerShell ile Veri Okuma

```powershell
# Test sonuçlarını oku
$results = Get-Content "pwa-test-results.json" | ConvertFrom-Json

# Başarı oranını al
$successRate = $results.summary.success_rate

# Trend analizini oku
$history = Get-Content "test-history.json" | ConvertFrom-Json
$trend = $history.trend_analysis.direction
```

### JavaScript ile Dashboard Entegrasyonu

```javascript
// JSON verilerini yükle
fetch('pwa-test-results.json')
  .then(response => response.json())
  .then(data => {
    const successRate = data.summary.success_rate;
    const passedTests = data.summary.passed_tests;

    // Dashboard'u güncelle
    updateDashboard(successRate, passedTests);
  });
```

## 🔧 Bakım ve Güncelleme

### Veri Temizliği

```powershell
# Eski test geçmişini temizle (30 günden eski)
$history = Get-Content "test-history.json" | ConvertFrom-Json
$cutoffDate = (Get-Date).AddDays(-30)

$history.test_runs = $history.test_runs | Where-Object {
  [DateTime]::Parse($_.timestamp) -gt $cutoffDate
}

$history | ConvertTo-Json -Depth 10 | Set-Content "test-history.json"
```

### Şema Güncellemeleri

- Yeni test kategorileri eklendiğinde `categories` alanını güncelleyin
- Yeni metrikler eklendiğinde `performance_metrics` alanını genişletin
- Trend analiz algoritması değiştiğinde `trend_analysis` yapısını güncelleyin

## 📝 Sürüm Geçmişi

### v4.0 (Güncel)
- Detaylı kategori bazlı sonuçlar
- Gelişmiş trend analizi
- Sistem bilgisi metadata'sı
- Güvenilirlik skoru hesaplama

### v3.0
- Temel JSON export özelliği
- Basit trend analizi
- Webhook bildirim desteği

### v2.0
- İlk JSON şeması
- Temel test sonuçları
- CSV export desteği

---

*Bu şema dokümantasyonu Test-PWA.ps1 v4.0 için hazırlanmıştır.*
