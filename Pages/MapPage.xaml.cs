using System;\nusing Microsoft.Maui.ApplicationModel;\nusing Microsoft.Maui.Controls;\nusing Microsoft.Maui.Controls.Maps;\nusing Microsoft.Maui.Maps;\nusing KesifUygulamasiTemplate.Models;\nusing KesifUygulamasiTemplate.Services;\n\nnamespace KesifUygulamasiTemplate.Pages\n{\n    public partial class MapPage : ContentPage\n    {\n        readonly Services.DatabaseService _databaseService;\n\n        public MapPage(Services.DatabaseService databaseService)\n        {\n            InitializeComponent();\n            _databaseService = databaseService ?? throw new ArgumentNullException(nameof(databaseService));\n\n            // Harita ayarları\n            mapView.IsShowingUser = true;\n            mapView.MapType = Microsoft.Maui.Maps.MapType.Street;\n\n            // Kaydet butonunu başta pasif yap\n            saveButton.IsEnabled = false;\n\n            // Başlık yazıldıkça kaydet butonunu aktif/pasif et\n            titleEntry.TextChanged += (s, e) =>\n                saveButton.IsEnabled = !string.IsNullOrWhiteSpace(e.NewTextValue);\n\n            // Buton olayları\n            addPinButton.Clicked += OnAddPinClicked!;\n            saveButton.Clicked += OnSaveClicked!;\n        }\n\n        protected override async void OnAppearing()\n        {\n            base.OnAppearing();\n\n            // Konum izni iste\n            var status = await Permissions.RequestAsync<Permissions.LocationWhenInUse>();\n            if (status != PermissionStatus.Granted)\n            {\n                await DisplayAlert("İzin Gerekli", "Konum izni gerekli.", "Tamam");\n                return;\n            }\n\n            // Önceki pinleri temizle\n            mapView.Pins.Clear();\n\n            // Veritabanından pinleri yükle\n            try\n            {\n                var locations = await _databaseService.GetAllLocationsAsync();\n                foreach (var loc in locations)\n                {\n                    mapView.Pins.Add(new Pin\n                    {\n                        Label = loc.Title,\n                        Address = loc.Description,\n                        Location = new Location(loc.Latitude, loc.Longitude)\n                    });\n                }\n            }\n            catch (Exception ex)\n            {\n                await DisplayAlert("Hata", $"Pinler yüklenemedi: {ex.Message}", "Tamam");\n            }\n        }\n\n        private void OnAddPinClicked(object sender, EventArgs e)\n        {\n            if (mapView.VisibleRegion == null)\n                return;\n\n            var center = mapView.VisibleRegion.Center;\n            mapView.MoveToRegion(MapSpan.FromCenterAndRadius(center, Distance.FromKilometers(1)));\n\n            var newLocation = new LocationModel\n            {\n                Title = titleEntry.Text ?? string.Empty,\n                Description = descriptionEntry.Text ?? string.Empty,\n                Latitude = center.Latitude,\n                Longitude = center.Longitude\n            };\n\n            mapView.Pins.Add(new Pin\n            {\n                Label = newLocation.Title,\n                Address = newLocation.Description,\n                Location = new Location(newLocation.Latitude, newLocation.Longitude)\n            });\n        }\n\n        private async void OnSaveClicked(object sender, EventArgs e)\n        {\n            if (mapView.VisibleRegion == null)\n                return;\n\n            var center = mapView.VisibleRegion.Center;\n            var newLocation = new LocationModel\n            {\n                Title = titleEntry.Text ?? string.Empty,\n                Description = descriptionEntry.Text ?? string.Empty,\n                Latitude = center.Latitude,\n                Longitude = center.Longitude\n            };\n\n            try\n            {\n                await _databaseService.SaveLocationAsync(newLocation);\n                await DisplayAlert("Başarılı", "Konum kaydedildi.", "Tamam");\n\n                titleEntry.Text = string.Empty;\n                descriptionEntry.Text = string.Empty;\n            }\n            catch (Exception ex)\n            {\n                await DisplayAlert("Hata", $"Kaydedilemedi: {ex.Message}", "Tamam");\n            }\n        }\n    }\n}\n