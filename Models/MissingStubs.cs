using System;\n\nnamespace KesifUygulamasiTemplate.Models\n{\n    /// <summary>\n    /// Harita tile modeli - offline caching için\n    /// </summary>\n    public class MapTile\n    {\n        public int Id { get; set; }\n        public int X { get; set; } // Tile X koordinatı\n        public int Y { get; set; } // Tile Y koordinatı\n        public int Zoom { get; set; } // Zoom seviyesi\n        public int ZoomLevel { get => Zoom; set => Zoom = value; } // Alias for compatibility\n        public byte[]? TileData { get; set; } // PNG tile verisi\n        public byte[] Data => TileData; // Testler için alias\n        public DateTime DownloadedDate { get; set; } // İndirilme tarihi\n        public DateTime LastAccessed { get; set; } // Son erişim tarihi\n        public DateTime LastUpdated { get => LastAccessed; set => LastAccessed = value; } // Alias for compatibility\n\n        // Geographic bounds for the tile\n        public double North { get; set; }\n        public double South { get; set; }\n        public double East { get; set; }\n        public double West { get; set; }\n\n        /// <summary>\n        /// Tile'ın benzersiz anahtarı\n        /// </summary>\n        public string TileKey => $"{Zoom}_{X}_{Y}";\n\n        /// <summary>\n        /// Tile boyutunu byte cinsinden döndürür\n        /// </summary>\n        public long SizeInBytes => TileData?.Length ?? 0;\n\n        /// <summary>\n        /// Tile'ın ne kadar süredir önbellekte olduğunu hesaplar\n        /// </summary>\n        public TimeSpan Age => DateTime.Now - DownloadedDate;\n\n        /// <summary>\n        /// Tile'ın son erişimden ne kadar süre geçtiğini hesaplar\n        /// </summary>\n        public TimeSpan TimeSinceLastAccess => DateTime.Now - LastAccessed;\n    }\n}\n