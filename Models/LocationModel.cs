using System;\nusing System.ComponentModel;\nusing System.Runtime.CompilerServices;\nusing SQLite;\n\nnamespace KesifUygulamasiTemplate.Models\n{\n    [Table("Locations")]\n    public class LocationModel : INotifyPropertyChanged\n    {\n        [PrimaryKey, AutoIncrement]\n        public int Id { get; set; }\n\n        private string title = string.Empty;\n        public string Title\n        {\n            get => title;\n            set\n            {\n                if (title != value)\n                {\n                    title = value;\n                    OnPropertyChanged();\n                }\n            }\n        }\n\n        private string description = string.Empty;\n        public string Description\n        {\n            get => description;\n            set\n            {\n                if (description != value)\n                {\n                    description = value;\n                    OnPropertyChanged();\n                }\n            }\n        }\n\n        private string name = string.Empty;\n        public string Name\n        {\n            get => name;\n            set\n            {\n                if (name != value)\n                {\n                    name = value;\n                    OnPropertyChanged();\n                }\n            }\n        }\n\n        private string address = string.Empty;\n        public string Address\n        {\n            get => address;\n            set\n            {\n                if (address != value)\n                {\n                    address = value;\n                    OnPropertyChanged();\n                }\n            }\n        }\n\n        private string category = string.Empty;\n        public string Category\n        {\n            get => category;\n            set\n            {\n                if (category != value)\n                {\n                    category = value;\n                    OnPropertyChanged();\n                }\n            }\n        }\n\n        private string iconName = string.Empty;\n        public string IconName\n        {\n            get => iconName;\n            set\n            {\n                if (iconName != value)\n                {\n                    iconName = value;\n                    OnPropertyChanged();\n                }\n            }\n        }\n\n        private double latitude;\n        public double Latitude\n        {\n            get => latitude;\n            set\n            {\n                if (latitude != value)\n                {\n                    latitude = value;\n                    OnPropertyChanged();\n                }\n            }\n        }\n\n        private double longitude;\n        public double Longitude\n        {\n            get => longitude;\n            set\n            {\n                if (longitude != value)\n                {\n                    longitude = value;\n                    OnPropertyChanged();\n                }\n            }\n        }\n\n        private DateTime createdAt = DateTime.UtcNow;\n        public DateTime CreatedAt\n        {\n            get => createdAt;\n            set\n            {\n                if (createdAt != value)\n                {\n                    createdAt = value;\n                    OnPropertyChanged();\n                }\n            }\n        }\n\n        public event PropertyChangedEventHandler? PropertyChanged;\n\n        protected void OnPropertyChanged([CallerMemberName] string propertyName = "")\n        {\n            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\n        }\n    }\n}\n