# 🔐 KesifApp Keystore Oluşturma Scripti

param(
    [string]$KeystorePath = ".\keystore\kesifapp.keystore",
    [string]$KeyAlias = "kesifapp_key",
    [string]$KeyPassword,
    [string]$StorePassword,
    [int]$ValidityDays = 10000,
    [switch]$Help
)

# Script bilgileri
$ScriptVersion = "1.0.0"
$LastUpdated = "30 Ağustos 2025"

# Renk tanımları
$Green = "Green"
$Yellow = "Yellow"
$Red = "Red"
$Cyan = "Cyan"
$White = "White"

function Write-ColorOutput {
    param(
        [string]$Message,
        [string]$Color = $White
    )
    Write-Host $Message -ForegroundColor $Color
}

function Show-Help {
    Write-ColorOutput "`n🔐 KesifApp Keystore Generator v$ScriptVersion" $Cyan
    Write-ColorOutput "Son güncelleme: $LastUpdated`n" $Yellow

    Write-ColorOutput "KULLANIM:" $Green
    Write-ColorOutput "  .\create-keystore.ps1 [parametreler]`n"

    Write-ColorOutput "PARAMETRELER:" $Green
    Write-ColorOutput "  -KeystorePath <path>     Keystore dosya yolu (varsayılan: .\keystore\kesifapp.keystore)"
    Write-ColorOutput "  -KeyAlias <alias>        Anahtar takma adı (varsayılan: kesifapp_key)"
    Write-ColorOutput "  -KeyPassword <pass>      Anahtar şifresi"
    Write-ColorOutput "  -StorePassword <pass>    Keystore şifresi"
    Write-ColorOutput "  -ValidityDays <days>     Geçerlilik süresi (varsayılan: 10000 gün)"
    Write-ColorOutput "  -Help                    Bu yardım mesajını gösterir`n"

    Write-ColorOutput "ÖRNEKLER:" $Green
    Write-ColorOutput "  .\create-keystore.ps1"
    Write-ColorOutput "  .\create-keystore.ps1 -KeyPassword 'MyKeyPass123' -StorePassword 'MyStorePass123'"
    Write-ColorOutput "  .\create-keystore.ps1 -KeystorePath '.\myapp.keystore' -ValidityDays 3650`n"

    Write-ColorOutput "GÜVENLİK NOTLARI:" $Yellow
    Write-ColorOutput "  - Şifrelerinizi güvenli bir yerde saklayın"
    Write-ColorOutput "  - Keystore dosyasını yedekleyin"
    Write-ColorOutput "  - Şifreleri kod içinde saklamayın"
    Write-ColorOutput "  - Düzenli olarak keystore'u yenileyin`n"
}

function Test-Prerequisites {
    Write-ColorOutput "`n🔍 Gereksinim kontrolü yapılıyor..." $Cyan

    # Java keytool kontrolü
    try {
        $keytoolVersion = keytool -version 2>&1
        Write-ColorOutput "✅ Java Keytool: $keytoolVersion" $Green
    }
    catch {
        Write-ColorOutput "❌ Java Keytool bulunamadı. Lütfen JDK yükleyin." $Red
        return $false
    }

    Write-ColorOutput "🎉 Gereksinimler sağlandı!`n" $Green
    return $true
}

function Create-KeystoreDirectory {
    $keystoreDir = Split-Path $KeystorePath -Parent

    if (-not (Test-Path $keystoreDir)) {
        try {
            New-Item -ItemType Directory -Path $keystoreDir -Force | Out-Null
            Write-ColorOutput "📁 Keystore klasörü oluşturuldu: $keystoreDir" $Green
        }
        catch {
            Write-ColorOutput "❌ Keystore klasörü oluşturulamadı: $($_.Exception.Message)" $Red
            return $false
        }
    }

    return $true
}

function Generate-Passwords {
    if (-not $KeyPassword) {
        $script:KeyPassword = -join ((65..90) + (97..122) + (48..57) | Get-Random -Count 16 | ForEach-Object {[char]$_})
        Write-ColorOutput "🔑 Rastgele anahtar şifresi oluşturuldu" $Yellow
    }

    if (-not $StorePassword) {
        $script:StorePassword = -join ((65..90) + (97..122) + (48..57) | Get-Random -Count 16 | ForEach-Object {[char]$_})
        Write-ColorOutput "🔐 Rastgele keystore şifresi oluşturuldu" $Yellow
    }
}

function Create-Keystore {
    Write-ColorOutput "`n🔐 Keystore oluşturuluyor..." $Cyan

    # Sertifika bilgileri
    $dname = "CN=KesifApp, OU=Development, O=Vahit Kirbiyik, L=Istanbul, ST=Turkey, C=TR"

    $keytoolArgs = @(
        "-genkeypair",
        "-v",
        "-keystore", $KeystorePath,
        "-alias", $KeyAlias,
        "-keyalg", "RSA",
        "-keysize", "2048",
        "-validity", $ValidityDays,
        "-storepass", $StorePassword,
        "-keypass", $KeyPassword,
        "-dname", $dname
    )

    try {
        & keytool $keytoolArgs
        Write-ColorOutput "✅ Keystore başarıyla oluşturuldu" $Green
        return $true
    }
    catch {
        Write-ColorOutput "❌ Keystore oluşturma başarısız: $($_.Exception.Message)" $Red
        return $false
    }
}

function Verify-Keystore {
    Write-ColorOutput "`n🔍 Keystore doğrulanıyor..." $Cyan

    try {
        $listResult = & keytool -list -v -keystore $KeystorePath -storepass $StorePassword 2>&1

        if ($listResult -match $KeyAlias) {
            Write-ColorOutput "✅ Keystore doğrulandı - Anahtar bulundu: $KeyAlias" $Green
            return $true
        }
        else {
            Write-ColorOutput "❌ Keystore doğrulama başarısız - Anahtar bulunamadı" $Red
            return $false
        }
    }
    catch {
        Write-ColorOutput "❌ Keystore doğrulama hatası: $($_.Exception.Message)" $Red
        return $false
    }
}

function Show-Summary {
    Write-ColorOutput "`n🎊 KEYSTORE ÖZETİ" $Cyan
    Write-ColorOutput "=" * 50 $Cyan

    Write-ColorOutput "📁 Keystore Yolu: $KeystorePath" $Green
    Write-ColorOutput "🔑 Anahtar Takma Adı: $KeyAlias" $Green
    Write-ColorOutput "📅 Geçerlilik: $ValidityDays gün" $Green
    Write-ColorOutput "🔐 Keystore Şifresi: $StorePassword" $Yellow
    Write-ColorOutput "🔑 Anahtar Şifresi: $KeyPassword" $Yellow

    Write-ColorOutput "`n⚠️  ÖNEMLİ GÜVENLİK UYARILARI:" $Red
    Write-ColorOutput "  • Bu şifreleri güvenli bir yerde saklayın" $White
    Write-ColorOutput "  • Keystore dosyasını yedekleyin" $White
    Write-ColorOutput "  • Şifreleri paylaşmayın" $White
    Write-ColorOutput "  • Düzenli olarak keystore'u kontrol edin" $White

    Write-ColorOutput "`n🚀 SONRAKİ ADIMLAR:" $Yellow
    Write-ColorOutput "1. Şifreleri güvenli bir yerde saklayın" $White
    Write-ColorOutput "  Örnek: password-manager, güvenli notlar" $White
    Write-ColorOutput "2. Keystore dosyasını yedekleyin" $White
    Write-ColorOutput "  Örnek: USB drive, cloud storage (encrypted)" $White
    Write-ColorOutput "3. Build scriptinde şifreleri kullanın" $White
    Write-ColorOutput "  Örnek: .\build-aab.ps1 -KeystorePassword '$StorePassword'" $White

    Write-ColorOutput "`n📞 DESTEK:" $Yellow
    Write-ColorOutput "GitHub: https://github.com/VahitKirbiyik/KesifUygulamasiTemplate" $White
    Write-ColorOutput "Issues: https://github.com/VahitKirbiyik/KesifUygulamasiTemplate/issues" $White
}

function Save-Passwords {
    $passwordFile = Join-Path (Split-Path $KeystorePath -Parent) "keystore-passwords.txt"

    try {
        $passwordContent = @"
# KesifApp Keystore Şifreleri
# Oluşturulma Tarihi: $(Get-Date -Format "yyyy-MM-dd HH:mm:ss")
# Geçerlilik Süresi: $ValidityDays gün

KEYSTORE_PATH=$KeystorePath
KEY_ALIAS=$KeyAlias
STORE_PASSWORD=$StorePassword
KEY_PASSWORD=$KeyPassword

# GÜVENLİK UYARISI:
# Bu dosyayı güvenli bir yerde saklayın
# Şifreleri kod içinde kullanmayın
# Düzenli olarak şifreleri değiştirin
"@

        $passwordContent | Out-File -FilePath $passwordFile -Encoding UTF8
        Write-ColorOutput "💾 Şifreler kaydedildi: $passwordFile" $Green
        Write-ColorOutput "⚠️  Bu dosyayı güvenli bir yerde saklayın!" $Red
    }
    catch {
        Write-ColorOutput "❌ Şifre dosyası kaydedilemedi: $($_.Exception.Message)" $Yellow
    }
}

# Ana script mantığı
function Main {
    if ($Help) {
        Show-Help
        return
    }

    Write-ColorOutput "`n🚀 KesifApp Keystore Generator başlatılıyor..." $Cyan
    Write-ColorOutput "Versiyon: $ScriptVersion | Tarih: $LastUpdated" $Yellow

    # Gereksinim kontrolü
    if (-not (Test-Prerequisites)) {
        Write-ColorOutput "`n❌ Gereksinimler sağlanamadı. Script durduruluyor." $Red
        exit 1
    }

    # Keystore klasörü oluştur
    if (-not (Create-KeystoreDirectory)) {
        exit 1
    }

    # Şifreleri oluştur
    Generate-Passwords

    # Keystore oluştur
    if (-not (Create-Keystore)) {
        exit 1
    }

    # Keystore doğrula
    if (-not (Verify-Keystore)) {
        exit 1
    }

    # Şifreleri kaydet
    Save-Passwords

    # Özet göster
    Show-Summary

    Write-ColorOutput "`n🎉 KesifApp keystore başarıyla oluşturuldu!" $Green
    Write-ColorOutput "Artık uygulamalarınızı imzalayabilirsiniz! 🔐`n" $Green
}

# Script'i çalıştır
Main
