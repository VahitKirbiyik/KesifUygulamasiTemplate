# 📦 KesifApp Android App Bundle Oluşturma Scripti\n\nparam(\n    [string]$Configuration = "Release",\n    [string]$OutputPath = ".\publish",\n    [string]$KeystorePath = ".\keystore\kesifapp.keystore",\n    [SecureString]$KeystorePassword,\n    [string]$KeyAlias = "kesifapp_key",\n    [switch]$Clean,\n    [switch]$NoSign,\n    [switch]$Help\n)\n\n# Script bilgileri\n$ScriptVersion = "1.0.0"\n$LastUpdated = "30 Ağustos 2025"\n\n# Renk tanımları\n$Green = "Green"\n$Yellow = "Yellow"\n$Red = "Red"\n$Cyan = "Cyan"\n$White = "White"\n\nfunction Write-ColorOutput {\n    param(\n        [string]$Message,\n        [string]$Color = $White\n    )\n    Write-Host $Message -ForegroundColor $Color\n}\n\nfunction Show-Help {\n    Write-ColorOutput "`n📦 KesifApp Android App Bundle Builder v$ScriptVersion" $Cyan\n    Write-ColorOutput "Son güncelleme: $LastUpdated`n" $Yellow\n\n    Write-ColorOutput "KULLANIM:" $Green\n    Write-ColorOutput "  .\build-aab.ps1 [parametreler]`n"\n\n    Write-ColorOutput "PARAMETRELER:" $Green\n    Write-ColorOutput "  -Configuration <config>    Build konfigürasyonu (varsayılan: Release)"\n    Write-ColorOutput "  -OutputPath <path>         Çıktı klasörü (varsayılan: .\publish)"\n    Write-ColorOutput "  -KeystorePath <path>       Keystore dosya yolu"\n    Write-ColorOutput "  -KeystorePassword <pass>   Keystore şifresi (varsayılan: çevre değişkeninden)"\n    Write-ColorOutput "  -KeyAlias <alias>          Anahtar takma adı (varsayılan: kesifapp_key)"\n    Write-ColorOutput "  -Clean                     Temiz build yapar"\n    Write-ColorOutput "  -NoSign                    İmzalama yapmadan build eder"\n    Write-ColorOutput "  -Help                      Bu yardım mesajını gösterir`n"\n\n    Write-ColorOutput "ÖRNEKLER:" $Green\n    Write-ColorOutput "  .\build-aab.ps1"\n    Write-ColorOutput "  .\build-aab.ps1 -Configuration Debug -NoSign"\n    Write-ColorOutput "  .\build-aab.ps1 -Clean -OutputPath .\output`n"\n\n    Write-ColorOutput "GEREKSİNİMLER:" $Yellow\n    Write-ColorOutput "  - .NET 8.0 SDK"\n    Write-ColorOutput "  - Android SDK (API 34)"\n    Write-ColorOutput "  - Java JDK 17+"\n    Write-ColorOutput "  - Android keystore (imzalama için)`n"\n}\n\nfunction Test-Prerequisites {\n    Write-ColorOutput "`n🔍 Gereksinim kontrolü yapılıyor..." $Cyan\n\n    # .NET SDK kontrolü\n    try {\n        $dotnetVersion = dotnet --version\n        Write-ColorOutput "✅ .NET SDK: $dotnetVersion" $Green\n    }\n    catch {\n        Write-ColorOutput "❌ .NET SDK bulunamadı. Lütfen .NET 8.0 SDK yükleyin." $Red\n        return $false\n    }\n\n    # Android SDK kontrolü\n    $androidHome = $env:ANDROID_HOME\n    if ($androidHome -and (Test-Path $androidHome)) {\n        Write-ColorOutput "✅ Android SDK: $androidHome" $Green\n    }\n    else {\n        Write-ColorOutput "❌ Android SDK bulunamadı. ANDROID_HOME çevre değişkenini ayarlayın." $Red\n        return $false\n    }\n\n    # Java kontrolü\n    try {\n        $javaVersion = java -version 2>&1 | Select-String "version"\n        Write-ColorOutput "✅ Java: $javaVersion" $Green\n    }\n    catch {\n        Write-ColorOutput "❌ Java JDK bulunamadı. Lütfen JDK 17+ yükleyin." $Red\n        return $false\n    }\n\n    # Keystore kontrolü\n    if (-not $NoSign) {\n        if (Test-Path $KeystorePath) {\n            Write-ColorOutput "✅ Keystore: $KeystorePath" $Green\n        }\n        else {\n            Write-ColorOutput "❌ Keystore bulunamadı: $KeystorePath" $Red\n            return $false\n        }\n    }\n\n    Write-ColorOutput "🎉 Tüm gereksinimler sağlandı!`n" $Green\n    return $true\n}\n\nfunction CleanProject {\n    Write-ColorOutput "`n🧹 Proje temizleniyor..." $Cyan\n\n    try {\n        dotnet clean\n        Write-ColorOutput "✅ Clean tamamlandı" $Green\n    }\n    catch {\n        Write-ColorOutput "❌ Clean başarısız: $($_.Exception.Message)" $Red\n        return $false\n    }\n\n    return $true\n}\n\nfunction Restore-Packages {\n    Write-ColorOutput "`n📦 NuGet paketleri geri yükleniyor..." $Cyan\n\n    try {\n        dotnet restore\n        Write-ColorOutput "✅ Paket geri yükleme tamamlandı" $Green\n    }\n    catch {\n        Write-ColorOutput "❌ Paket geri yükleme başarısız: $($_.Exception.Message)" $Red\n        return $false\n    }\n\n    return $true\n}\n\nfunction Build-Project {\n    Write-ColorOutput "`n🔨 Proje derleniyor..." $Cyan\n    Write-ColorOutput "Konfigürasyon: $Configuration" $Yellow\n\n    try {\n        dotnet build -c $Configuration --no-restore\n        Write-ColorOutput "✅ Build tamamlandı" $Green\n    }\n    catch {\n        Write-ColorOutput "❌ Build başarısız: $($_.Exception.Message)" $Red\n        return $false\n    }\n\n    return $true\n}\n\nfunction Publish-Android {\n    Write-ColorOutput "`n📱 Android App Bundle yayınlanıyor..." $Cyan\n\n    $publishArgs = @(\n        "publish",\n        "-c", $Configuration,\n        "-f", "net8.0-android",\n        "--android-platform", "34",\n        "--self-contained",\n        "-p:AndroidPackageFormat=aab",\n        "-p:ApplicationId=com.vahit.kesifuygulamasi",\n        "-p:ApplicationVersion=4",\n        "-p:ApplicationDisplayVersion=1.0.0",\n        "-o", $OutputPath\n    )\n\n    try {\n        & dotnet $publishArgs\n        Write-ColorOutput "✅ Android publish tamamlandı" $Green\n    }\n    catch {\n        Write-ColorOutput "❌ Android publish başarısız: $($_.Exception.Message)" $Red\n        return $false\n    }\n\n    return $true\n}\n\nfunction SignBundle {\n    if ($NoSign) {\n        Write-ColorOutput "`n⏭️  İmzalama atlanıyor (-NoSign parametresi)" $Yellow\n        return $true\n    }\n\n    Write-ColorOutput "`n🔐 App Bundle imzalanıyor..." $Cyan\n\n    # Keystore şifresini al\n    if (-not $KeystorePassword) {\n        $KeystorePassword = Read-Host "Keystore şifresini girin" -AsSecureString\n        if (-not $KeystorePassword) {\n            Write-ColorOutput "❌ Keystore şifresi gerekli" $Red\n            return $false\n        }\n    }\n\n    $bundlePath = Join-Path $OutputPath "com.vahit.kesifuygulamasi-Signed.aab"\n    $unsignedBundlePath = Get-ChildItem $OutputPath -Filter "*.aab" | Select-Object -First 1\n\n    if (-not $unsignedBundlePath) {\n        Write-ColorOutput "❌ AAB dosyası bulunamadı" $Red\n        return $false\n    }\n\n    try {\n        # jarsigner ile imzalama\n        & jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 -keystore $KeystorePath -storepass $KeystorePassword -keypass $KeystorePassword $unsignedBundlePath.FullName $KeyAlias\n\n        # İmzalı dosyayı yeniden adlandır\n        Move-Item $unsignedBundlePath.FullName $bundlePath -Force\n\n        Write-ColorOutput "✅ İmzalama tamamlandı: $bundlePath" $Green\n    }\n    catch {\n        Write-ColorOutput "❌ İmzalama başarısız: $($_.Exception.Message)" $Red\n        return $false\n    }\n\n    return $true\n}\n\nfunction VerifyBundle {\n    Write-ColorOutput "`n🔍 App Bundle doğrulanıyor..." $Cyan\n\n    $bundlePath = Get-ChildItem $OutputPath -Filter "*.aab" | Select-Object -First 1\n\n    if (-not $bundlePath) {\n        Write-ColorOutput "❌ AAB dosyası bulunamadı" $Red\n        return $false\n    }\n\n    # Dosya boyutu kontrolü\n    $fileSize = (Get-Item $bundlePath.FullName).Length / 1MB\n    Write-ColorOutput "📊 Dosya boyutu: $([math]::Round($fileSize, 2)) MB" $Yellow\n\n    if ($fileSize -gt 150) {\n        Write-ColorOutput "⚠️  Dosya boyutu büyük (>150MB). Play Store limiti kontrol edin." $Yellow\n    }\n\n    # İmza kontrolü\n    if (-not $NoSign) {\n        try {\n            $verifyResult = & jarsigner -verify -verbose $bundlePath.FullName 2>&1\n            if ($verifyResult -match "verified") {\n                Write-ColorOutput "✅ İmza doğrulandı" $Green\n            }\n            else {\n                Write-ColorOutput "❌ İmza doğrulanamadı" $Red\n                return $false\n            }\n        }\n        catch {\n            Write-ColorOutput "❌ İmza kontrolü başarısız: $($_.Exception.Message)" $Red\n            return $false\n        }\n    }\n\n    Write-ColorOutput "✅ Bundle doğrulama tamamlandı" $Green\n    return $true\n}\n\nfunction Show-Summary {\n    Write-ColorOutput "`n🎊 BUILD ÖZETİ" $Cyan\n    Write-ColorOutput "=" * 50 $Cyan\n\n    $bundlePath = Get-ChildItem $OutputPath -Filter "*.aab" | Select-Object -First 1\n\n    if ($bundlePath) {\n        Write-ColorOutput "📦 App Bundle: $($bundlePath.FullName)" $Green\n        Write-ColorOutput "📊 Boyut: $([math]::Round((Get-Item $bundlePath.FullName).Length / 1MB, 2)) MB" $Green\n        Write-ColorOutput "📅 Oluşturulma: $(Get-Item $bundlePath.FullName).CreationTime" $Green\n    }\n\n    Write-ColorOutput "`n🚀 SONRAKİ ADIMLAR:" $Yellow\n    Write-ColorOutput "1. Google Play Console'a giriş yapın" $White\n    Write-ColorOutput "2. KesifApp uygulamasını seçin" $White\n    Write-ColorOutput "3. 'Üretim' sekmesine gidin" $White\n    Write-ColorOutput "4. App Bundle dosyasını yükleyin" $White\n    Write-ColorOutput "5. Yayınlamayı başlatın" $White\n\n    Write-ColorOutput "`n📞 DESTEK:" $Yellow\n    Write-ColorOutput "GitHub: https://github.com/VahitKirbiyik/KesifUygulamasiTemplate" $White\n    Write-ColorOutput "Issues: https://github.com/VahitKirbiyik/KesifUygulamasiTemplate/issues" $White\n}\n\n# Ana script mantığı\nfunction Main {\n    if ($Help) {\n        Show-Help\n        return\n    }\n\n    Write-ColorOutput "`n🚀 KesifApp Android App Bundle Builder başlatılıyor..." $Cyan\n    Write-ColorOutput "Versiyon: $ScriptVersion | Tarih: $LastUpdated" $Yellow\n\n    # Gereksinim kontrolü\n    if (-not (Test-Prerequisites)) {\n        Write-ColorOutput "`n❌ Gereksinimler sağlanamadı. Script durduruluyor." $Red\n        exit 1\n    }\n\n    # Çıktı klasörü oluştur\n    if (-not (Test-Path $OutputPath)) {\n        New-Item -ItemType Directory -Path $OutputPath | Out-Null\n        Write-ColorOutput "📁 Çıktı klasörü oluşturuldu: $OutputPath" $Green\n    }\n\n    # Temizleme\n    if ($Clean) {\n        if (-not (CleanProject)) {\n            exit 1\n        }\n    }\n\n    # Paket geri yükleme\n    if (-not (Restore-Packages)) {\n        exit 1\n    }\n\n    # Build\n    if (-not (Build-Project)) {\n        exit 1\n    }\n\n    # Android publish\n    if (-not (Publish-Android)) {\n        exit 1\n    }\n\n    # İmzalama\n    if (-not (SignBundle)) {\n        exit 1\n    }\n\n    # Doğrulama\n    if (-not (VerifyBundle)) {\n        exit 1\n    }\n\n    # Özet\n    Show-Summary\n\n    Write-ColorOutput "`n🎉 KesifApp App Bundle başarıyla oluşturuldu!" $Green\n    Write-ColorOutput "Artık Play Store'a yüklemeye hazırsınız! 🚀`n" $Green\n}\n\n# Script'i çalıştır\nMain\n