using System;\nusing System.Threading.Tasks;\nusing System.Windows.Input;\nusing KesifUygulamasiTemplate.Services;\nusing KesifUygulamasiTemplate.Services.Interfaces;\nusing Microsoft.Maui.Controls;\nusing KesifUygulamasiTemplate.ViewModels.Base;\n\nnamespace KesifUygulamasiTemplate.ViewModels\n{\n    public class CompassViewModel : BaseViewModel\n    {\n        private readonly ICompassService _compassService;\n\n        private double _heading;\n        public double Heading\n        {\n            get => _heading;\n            set => SetProperty(ref _heading, value);\n        }\n\n        private bool _isActive;\n        public bool IsActive\n        {\n            get => _isActive;\n            set => SetProperty(ref _isActive, value);\n        }\n\n        public ICommand StartCompassCommand { get; }\n        public ICommand StopCompassCommand { get; }\n\n        public CompassViewModel(ICompassService compassService)\n        {\n            _compassService = compassService ?? throw new ArgumentNullException(nameof(compassService));\n\n            StartCompassCommand = new Command(StartCompass);\n            StopCompassCommand = new Command(StopCompass);\n        }\n\n        public void StartCompass()\n        {\n            try\n            {\n                _compassService.Start();\n                IsActive = true;\n            }\n            catch (Exception ex)\n            {\n                // Handle error\n                Application.Current?.MainPage?.DisplayAlert("Error", $"Failed to start compass: {ex.Message}", "OK");\n            }\n        }\n\n        public void StopCompass()\n        {\n            _compassService.Stop();\n            IsActive = false;\n        }\n    }\n}\n