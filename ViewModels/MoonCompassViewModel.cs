using System;\nusing System.Threading.Tasks;\nusing System.Windows.Input;\nusing Microsoft.Maui.ApplicationModel.Communication;\nusing Microsoft.Maui.Controls;\nusing Microsoft.Maui.Devices.Sensors;\nusing KesifUygulamasiTemplate.Models;\nusing KesifUygulamasiTemplate.Resources.Strings;\nusing KesifUygulamasiTemplate.Services;\nusing Microsoft.Maui.ApplicationModel.DataTransfer;\nusing KesifUygulamasiTemplate.ViewModels.Base;\n\nnamespace KesifUygulamasiTemplate.ViewModels\n{\n    /// <summary>\n    /// Ay pusulas� sayfas� i�in ViewModel\n    /// Ay verileri (faz, do�u�, bat��) ve konum y�netimi\n    /// </summary>\n    public class MoonCompassViewModel : BaseViewModel\n    {\n        #region Private Fields\n        private readonly IMoonCompassService _moonCompassService;\n        private readonly LocationService _locationService;\n        private readonly ConnectivityService _connectivityService;\n        private readonly AppCenterAnalyticsService _analyticsService;\n        private MoonData? _moonData;\n        private Location? _currentLocation;\n        private bool _isLoading;\n        private bool _isOnline;\n        #endregion\n\n        #region Public Properties\n        /// <summary>\n        /// Ay verileri (faz, do�u�, bat�� saatleri)\n        /// </summary>\n        public MoonData? MoonData\n        {\n            get => _moonData;\n            set => SetProperty(ref _moonData, value);\n        }\n\n        /// <summary>\n        /// Mevcut konum bilgisi\n        /// </summary>\n        public Location? CurrentLocation\n        {\n            get => _currentLocation;\n            set => SetProperty(ref _currentLocation, value);\n        }\n\n        /// <summary>\n        /// Veri y�kleniyor durumu\n        /// </summary>\n        public bool IsLoading\n        {\n            get => _isLoading;\n            set => SetProperty(ref _isLoading, value);\n        }\n\n        /// <summary>\n        /// �nternet ba�lant�s� durumu\n        /// </summary>\n        public bool IsOnline => Microsoft.Maui.Networking.Connectivity.Current.NetworkAccess == Microsoft.Maui.Networking.NetworkAccess.Internet;\n\n        /// <summary>\n        /// Formatlanm�� ay do�u� saati (kullan�c� dilinde)\n        /// </summary>\n        public string FormattedRiseTime => MoonData?.RiseTime != null\n            ? LocalizationService.FormatTime(MoonData.RiseTime)\n            : string.Empty;\n\n        /// <summary>\n        /// Formatlanm�� ay bat�� saati (kullan�c� dilinde)\n        /// </summary>\n        public string FormattedSetTime => MoonData?.SetTime != null\n            ? LocalizationService.FormatTime(MoonData.SetTime)\n            : string.Empty;\n\n        /// <summary>\n        /// Formatlanm�� ay faz� y�zdesi\n        /// </summary>\n        public string FormattedPhase => MoonData != null\n            ? LocalizationService.FormatNumber(MoonData.Phase * 100) + "%"\n            : string.Empty;\n\n        /// <summary>\n        /// Formatlanm�� ayd�nlanma y�zdesi\n        /// </summary>\n        public string FormattedIllumination => MoonData != null\n            ? LocalizationService.FormatNumber(MoonData.Illumination * 100) + "%"\n            : string.Empty;\n\n        /// <summary>\n        /// Ay faz�n�n ad�\n        /// </summary>\n        public string MoonPhaseName => MoonData?.PhaseName ?? string.Empty;\n\n        /// <summary>\n        /// Ay faz�n�n emoji temsili\n        /// </summary>\n        public string MoonPhaseEmoji => MoonData?.PhaseEmoji ?? "??";\n\n        /// <summary>\n        /// Formatlanm�� ay mesafesi\n        /// </summary>\n        public string FormattedDistance => MoonData != null\n            ? $"{LocalizationService.FormatNumber(MoonData.Distance)} km"\n            : string.Empty;\n\n        /// <summary>\n        /// Formatlanm�� azimuth a��s�\n        /// </summary>\n        public string FormattedAzimuth => MoonData != null\n            ? $"{LocalizationService.FormatNumber(MoonData.Azimuth)}�"\n            : string.Empty;\n\n        /// <summary>\n        /// Formatlanm�� altitude a��s�\n        /// </summary>\n        public string FormattedAltitude => MoonData != null\n            ? $"{LocalizationService.FormatNumber(MoonData.Altitude)}�"\n            : string.Empty;\n\n        /// <summary>\n        /// Konum bilgisi var m�?\n        /// </summary>\n        public bool HasLocationData => CurrentLocation != null;\n\n        /// <summary>\n        /// Ay verisi var m�?\n        /// </summary>\n        public bool HasMoonData => MoonData != null;\n        #endregion\n\n        #region Commands\n        public ICommand RefreshCommand { get; }\n        public ICommand GetLocationCommand { get; }\n        public ICommand ShareCommand { get; }\n        public ICommand LoadMoonDataCommand { get; }\n        #endregion\n\n        #region Constructor\n        public MoonCompassViewModel(IMoonCompassService moonCompassService, LocationService locationService, ConnectivityService connectivityService, AppCenterAnalyticsService analyticsService)\n        {\n            _moonCompassService = moonCompassService;\n            _locationService = locationService;\n            _connectivityService = connectivityService;\n            _analyticsService = analyticsService;\n\n            // Ba�lang�� de�erleri\n            Title = AppResources.MoonCompass;\n            MoonData = new MoonData();\n\n            // Commands\n            RefreshCommand = new Command(async () => await RefreshAsync(), () => IsNotBusy);\n            GetLocationCommand = new Command(async () => await GetCurrentLocationAsync(), () => IsNotBusy);\n            ShareCommand = new Command(async () => await ShareMoonDataAsync(), () => HasMoonData && IsNotBusy);\n            LoadMoonDataCommand = new Command(async () => await LoadMoonDataForCurrentLocationAsync(), () => IsNotBusy);\n\n            // Dil de�i�ikli�i dinleyicisi\n            LocalizationService.Instance.PropertyChanged += OnLocalizationChanged;\n            _connectivityService.ConnectivityChanged += OnConnectivityChanged;\n        }\n        #endregion\n\n        #region Public Methods\n        /// <summary>\n        /// Belirli koordinatlar i�in ay verilerini y�kler\n        /// </summary>\n        public async Task LoadMoonDataAsync(double latitude, double longitude)\n        {\n            _analyticsService.TrackEvent("MoonDataLoadStarted", new System.Collections.Generic.Dictionary<string, string>\n            {\n                { "Latitude", latitude.ToString() },\n                { "Longitude", longitude.ToString() }\n            });\n            await ExecuteAsync(async () =>\n            {\n                CurrentLocation = new Location(latitude, longitude);\n                MoonData = await _moonCompassService.GetMoonDataAsync(latitude, longitude);\n\n                UpdateFormattedProperties();\n                UpdateCommandStates();\n\n                await ShowSuccessAsync(AppResources.MoonInformation);\n                _analyticsService.TrackEvent("MoonDataLoadSucceeded");\n            }, AppResources.Loading);\n        }\n\n        /// <summary>\n        /// Mevcut konum için ay verilerini yükler\n        /// </summary>\n        public async Task LoadMoonDataForCurrentLocationAsync()\n        {\n            if (CurrentLocation != null)\n            {\n                await LoadMoonDataAsync(CurrentLocation.Latitude, CurrentLocation.Longitude);\n            }\n            else\n            {\n                await GetCurrentLocationAsync();\n            }\n        }\n\n        #endregion\n\n        #region Private Methods\n        /// <summary>\n        /// Veri yenileme i�lemi\n        /// </summary>\n        private async Task RefreshAsync()\n        {\n            _analyticsService.TrackEvent("MoonDataRefreshRequested");\n            await ExecuteAsync(async () =>\n            {\n                // 1. Mevcut konum varsa onu kullan, yoksa yeni konum al\n                var location = CurrentLocation ?? await GetLocationSafelyAsync();\n\n                if (location == null)\n                {\n                    // Varsay�lan konum kullan (�stanbul)\n                    location = new Location(41.0082, 28.9784);\n                    await ShowWarningAsync(AppResources.DefaultLocation);\n                }\n\n                CurrentLocation = location;\n\n                // 2. Ay verilerini al\n                MoonData = await _moonCompassService.GetMoonDataAsync(location.Latitude, location.Longitude);\n\n                UpdateFormattedProperties();\n                UpdateCommandStates();\n\n                _analyticsService.TrackEvent("MoonDataRefreshCompleted");\n            }, "Veriler yenileniyor...");\n        }\n\n        /// <summary>\n        /// Mevcut konumu g�venli �ekilde al�r\n        /// </summary>\n        private async Task GetCurrentLocationAsync()\n        {\n            _analyticsService.TrackEvent("GetCurrentLocationRequested");\n            await ExecuteAsync(async () =>\n            {\n                var location = await _locationService.GetCurrentLocationAsync();\n\n                if (location != null)\n                {\n                    CurrentLocation = location;\n\n                    // Yeni konum ile ay verilerini g�ncelle\n                    MoonData = await _moonCompassService.GetMoonDataAsync(location.Latitude, location.Longitude);\n\n                    UpdateFormattedProperties();\n                    UpdateCommandStates();\n\n                    await ShowSuccessAsync(AppResources.LocationUpdated);\n                    _analyticsService.TrackEvent("GetCurrentLocationSucceeded");\n                }\n                else\n                {\n                    await ShowErrorAsync(AppResources.LocationNotAvailable);\n                    _analyticsService.TrackEvent("GetCurrentLocationFailed");\n                }\n            }, AppResources.Loading);\n        }\n\n        /// <summary>\n        /// Hata yakalamadan konum alma\n        /// </summary>\n        private async Task<Location> GetLocationSafelyAsync()\n        {\n            try\n            {\n                return await _locationService.GetCurrentLocationAsync();\n            }\n            catch\n            {\n                return null;\n            }\n        }\n\n        /// <summary>\n        /// Ay verilerini payla�ma\n        /// </summary>\n        private async Task ShareMoonDataAsync()\n        {\n            if (!HasMoonData) return;\n\n            _analyticsService.TrackEvent("ShareMoonDataRequested");\n            var shareText = $"?? {AppResources.MoonInformation}\n" +\n                           $"{AppResources.MoonRise}: {FormattedRiseTime}\n" +\n                           $"{AppResources.MoonSet}: {FormattedSetTime}\n" +\n                           $"{AppResources.MoonPhase}: {FormattedPhase}\n" +\n                           $"?? {CurrentLocation?.Latitude:0.000}, {CurrentLocation?.Longitude:0.000}\n" +\n                           $"?? {AppResources.AppName}";\n\n            await Share.RequestAsync(new ShareTextRequest\n            {\n                Text = shareText,\n                Title = AppResources.ShareMoonData\n            });\n\n            await ShowSuccessAsync(AppResources.ShareSuccessful);\n            _analyticsService.TrackEvent("ShareMoonDataCompleted");\n        }\n\n        /// <summary>\n        /// Formatlanm�� property'leri g�nceller\n        /// </summary>\n        private void UpdateFormattedProperties()\n        {\n            OnPropertyChanged(nameof(FormattedRiseTime));\n            OnPropertyChanged(nameof(FormattedSetTime));\n            OnPropertyChanged(nameof(FormattedPhase));\n            OnPropertyChanged(nameof(FormattedIllumination));\n            OnPropertyChanged(nameof(MoonPhaseName));\n            OnPropertyChanged(nameof(MoonPhaseEmoji));\n            OnPropertyChanged(nameof(FormattedDistance));\n            OnPropertyChanged(nameof(FormattedAzimuth));\n            OnPropertyChanged(nameof(FormattedAltitude));\n            OnPropertyChanged(nameof(HasLocationData));\n            OnPropertyChanged(nameof(HasMoonData));\n        }\n\n        /// <summary>\n        /// Command durumlar�n� g�nceller\n        /// </summary>\n        private void UpdateCommandStates()\n        {\n            ((Command)RefreshCommand).ChangeCanExecute();\n            ((Command)GetLocationCommand).ChangeCanExecute();\n            ((Command)ShareCommand).ChangeCanExecute();\n        }\n\n        /// <summary>\n        /// Dil de�i�ikli�i olay�n� yakalar\n        /// </summary>\n        private void OnLocalizationChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e)\n        {\n            if (string.IsNullOrEmpty(e.PropertyName) || e.PropertyName == nameof(LocalizationService.CurrentCulture))\n            {\n                Title = Resources.Strings.AppResources.MoonCompass;\n                UpdateFormattedProperties();\n            }\n        }\n\n        private async void OnConnectivityChanged(bool isConnected)\n        {\n            if (isConnected)\n                await ShowInfoAsync(AppResources.InternetConnected);\n            else\n                await ShowWarningAsync(AppResources.InternetDisconnected);\n        }\n        #endregion\n    }\n}\n