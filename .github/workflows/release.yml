name: Release Build

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Encoding Guard
      shell: pwsh
      run: |
        Write-Host "Encoding kontrolü başlatıldı..."

        $files = Get-ChildItem -Path . -Recurse -File -Filter *.cs
        foreach ($file in $files) {
            $content = Get-Content $file.FullName
            $content | Set-Content -Path $file.FullName -Encoding utf8BOM
        }

        Write-Host "Tüm .cs dosyaları UTF-8 with BOM formatına dönüştürüldü."

        $errors = @()
        foreach ($file in $files) {
            if ([System.IO.File]::Exists($file.FullName)) {
                $bytes = [System.IO.File]::ReadAllBytes($file.FullName)
                if (-not ($bytes.Length -ge 3 -and $bytes[0] -eq 0xEF -and $bytes[1] -eq 0xBB -and $bytes[2] -eq 0xBF)) {
                    $errors += $file.FullName
                }
            }
        }

        if ($errors.Count -gt 0) {
            Write-Host "❌ BOM olmayan dosyalar bulundu:"
            $errors | ForEach-Object { Write-Host " - $_" }
            exit 1
        } else {
            Write-Host "🎯 Encoding doğrulaması başarıyla geçti."
        }

    - name: Build project
      run: dotnet build --configuration Release

    - name: Run tests
      run: dotnet test --no-build --verbosity normal

    - name: PowerShell ile release-build.ps1 çalıştır
      shell: pwsh
      run: |
        ./tools/release-build.ps1

    - name: Android Artefact Upload
      uses: actions/upload-artifact@v4
      with:
        name: Android-Release
        path: out/Android

    - name: iOS Artefact Upload
      uses: actions/upload-artifact@v4
      with:
        name: iOS-Release
        path: out/iOS

    - name: Log dosyasını yükle
      uses: actions/upload-artifact@v4
      with:
        name: pre-commit-log
        path: pre-commit.log

    - name: Security Scan
      run: dotnet list package --vulnerable > artifacts/security-scan.log

    - name: Performance Test
      run: |
        locust -f load_test.py --headless -u 50 -r 5 -t 1m --csv=artifacts/performance-test
