# Profil Yönetimi Sistemi

## 📋 Genel Bakış

KesifUygulamasiTemplate uygulaması, kullanıcıların kişisel bilgilerini, tercihlerini ve gizlilik ayarlarını yönetebilecekleri kapsamlı bir profil yönetim sistemi içerir. Bu sistem, yerel veri saklama (Preferences API) kullanarak kullanıcı deneyimini geliştirir.

## 🎯 Özellikler

### ✅ Kişisel Bilgi Yönetimi
- **Ad Soyad**: Kullanıcının tam adını düzenleme
- **E-posta**: İletişim e-posta adresi yönetimi
- **Telefon**: Telefon numarası saklama

### 🔔 Bildirim Tercihleri
- **Push Bildirimleri**: Uygulama içi bildirimler
- **E-posta Bildirimleri**: E-posta ile bildirim alma
- **SMS Bildirimleri**: SMS ile bildirim alma

### 🔒 Gizlilik Ayarları
- **Konum Takibi**: GPS konum bilgisi paylaşımı
- **Veri Paylaşımı**: Analitik ve kullanım verileri paylaşımı

## 📱 Kullanıcı Arayüzü

### Profil Sayfası Bileşenleri

```xaml
<!-- Kişisel Bilgiler Bölümü -->
<VerticalStackLayout Spacing="15">
    <Entry Placeholder="Ad Soyad" Text="{Binding FullName}" />
    <Entry Placeholder="E-posta" Text="{Binding Email}" Keyboard="Email" />
    <Entry Placeholder="Telefon" Text="{Binding Phone}" Keyboard="Telephone" />
</VerticalStackLayout>

<!-- Bildirim Tercihleri -->
<VerticalStackLayout Spacing="10">
    <Label Text="Bildirim Tercihleri" FontAttributes="Bold" />
    <HorizontalStackLayout>
        <Label Text="Push Bildirimleri" VerticalOptions="Center" />
        <Switch IsToggled="{Binding IsPushNotificationsEnabled}" />
    </HorizontalStackLayout>
    <!-- Diğer bildirim switch'leri... -->
</VerticalStackLayout>

<!-- Gizlilik Ayarları -->
<VerticalStackLayout Spacing="10">
    <Label Text="Gizlilik Ayarları" FontAttributes="Bold" />
    <HorizontalStackLayout>
        <Label Text="Konum Takibi" VerticalOptions="Center" />
        <Switch IsToggled="{Binding IsLocationTrackingEnabled}" />
    </HorizontalStackLayout>
    <!-- Diğer gizlilik switch'leri... -->
</VerticalStackLayout>
```

## 🔧 Teknik Uygulama

### ViewModel Yapısı

```csharp
public class ProfileViewModel : BaseViewModel
{
    private readonly IPreferencesService _preferencesService;

    // Özellikler
    public string FullName { get; set; }
    public string Email { get; set; }
    public string Phone { get; set; }

    // Bildirim tercihleri
    public bool IsPushNotificationsEnabled { get; set; }
    public bool IsEmailNotificationsEnabled { get; set; }
    public bool IsSMSNotificationsEnabled { get; set; }

    // Gizlilik ayarları
    public bool IsLocationTrackingEnabled { get; set; }
    public bool IsDataSharingEnabled { get; set; }

    // Komutlar
    public ICommand SaveCommand { get; }
    public ICommand CancelCommand { get; }
}
```

### Veri Saklama

Profil verileri, .NET MAUI Preferences API kullanılarak yerel olarak saklanır:

```csharp
private async Task SaveProfileAsync()
{
    await _preferencesService.SetAsync("profile.fullname", FullName);
    await _preferencesService.SetAsync("profile.email", Email);
    await _preferencesService.SetAsync("profile.phone", Phone);

    // Bildirim tercihleri
    await _preferencesService.SetAsync("notifications.push", IsPushNotificationsEnabled);
    await _preferencesService.SetAsync("notifications.email", IsEmailNotificationsEnabled);
    await _preferencesService.SetAsync("notifications.sms", IsSMSNotificationsEnabled);

    // Gizlilik ayarları
    await _preferencesService.SetAsync("privacy.location", IsLocationTrackingEnabled);
    await _preferencesService.SetAsync("privacy.data", IsDataSharingEnabled);
}
```

### Navigasyon

Profil sayfasına erişim, Ayarlar sayfasından sağlanır:

```csharp
public async Task GoToProfileAsync()
{
    await Shell.Current.GoToAsync("//ProfilePage");
}
```

## 📋 Kurulum ve Yapılandırma

### 1. Dependency Injection

`MauiProgram.cs` dosyasında gerekli servislerin kaydedilmesi:

```csharp
builder.Services.AddTransient<ProfileViewModel>();
builder.Services.AddTransient<ProfilePage>();
```

### 2. Shell Navigasyonu

`AppShell.xaml` dosyasında profil sayfasının tanımlanması:

```xaml
<ShellContent
    Title="Profil"
    ContentTemplate="{DataTemplate views:ProfilePage}" />
```

### 3. Ayarlar Sayfasından Erişim

`SettingsPage.xaml` dosyasında profil butonu:

```xaml
<Button Text="Profil"
        Command="{Binding GoToProfileCommand}"
        BackgroundColor="#4CAF50"
        TextColor="White" />
```

## 🔄 Veri Akışı

1. **Uygulama Başlatma**: Profil verileri Preferences'tan yüklenir
2. **Veri Düzenleme**: Kullanıcı arayüzü üzerinden değişiklik yapılır
3. **Kaydetme**: Değişiklikler Preferences API ile saklanır
4. **Yeniden Yükleme**: Uygulama yeniden açıldığında veriler geri yüklenir

## 🛡️ Güvenlik ve Gizlilik

- Tüm veriler yerel olarak saklanır (cihazda)
- Hassas veriler şifrelenmez (geliştirme amaçlı)
- Kullanıcı verileri üçüncü taraflarla paylaşılmaz
- GDPR uyumlu gizlilik ayarları

## 🧪 Test Senaryoları

### Temel İşlevsellik Testi
1. Profil sayfasına git
2. Kişisel bilgileri düzenle
3. Bildirim tercihlerini değiştir
4. Gizlilik ayarlarını güncelle
5. Değişiklikleri kaydet
6. Uygulamayı yeniden başlat
7. Verilerin korunduğunu doğrula

### Veri Doğrulama Testi
1. Geçersiz e-posta formatı gir
2. Boş zorunlu alanları kontrol et
3. Maksimum karakter sınırlarını test et

## 📊 Performans Metrikleri

- **Yükleme Süresi**: < 100ms (profil verilerinin yüklenmesi)
- **Kaydetme Süresi**: < 50ms (Preferences API)
- **Bellek Kullanımı**: Minimal (sadece aktif profil verileri)

## 🔮 Gelecek Geliştirmeler

- [ ] Profil resmi yükleme
- [ ] Sosyal medya entegrasyonu
- [ ] Veri senkronizasyonu (bulut)
- [ ] İki faktörlü kimlik doğrulama
- [ ] Veri dışa aktarma/İçe aktarma

## 📞 Destek

Herhangi bir sorun yaşarsanız:

1. `docs/troubleshooting.md` dosyasını kontrol edin
2. GitHub Issues sayfasında rapor oluşturun
3. `support@kesifapp.com` adresinden iletişime geçin

---

*Bu dokümantasyon son güncelleme: 30 Ağustos 2025*
